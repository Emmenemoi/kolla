[tox]
minversion = 1.6
skipsdist = True
envlist = functional,pep8

[testenv]
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

[testenv:pep8]
commands =
  {toxinidir}/tools/run-bashate.sh
  flake8 {posargs}
  {toxinidir}/tools/validate-all-json.sh
  {toxinidir}/tools/validate-all-yaml.sh
  {toxinidir}/tools/validate-all-maintainer.sh

[testenv:linters]
# temporary environment until infra jobs are changed.
# TODO(jaegerandi): remove this
commands =
  {toxinidir}/tools/run-bashate.sh
  flake8 {posargs}
  {toxinidir}/tools/validate-all-json.sh
  {toxinidir}/tools/validate-all-yaml.sh
  {toxinidir}/tools/validate-all-maintainer.sh

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:validate-contents]
commands =
    {toxinidir}/tools/validate-all-json.sh
    {toxinidir}/tools/validate-all-yaml.sh
    {toxinidir}/tools/validate-all-maintainer.sh

[testenv:bashate]
commands =
  {toxinidir}/tools/run-bashate.sh

[testenv:setupenv]
whitelist_externals = bash
commands = bash -c tests/setup_gate.sh

[testenv:build-centos-binary]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestCentosBinary

[testenv:build-centos-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestCentosSource

[testenv:build-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestUbuntuSource

[testenv:deploy-centos-binary]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.DeployTestCentosBinary
   sudo tests/deploy_aio.sh centos binary

[testenv:deploy-centos-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.DeployTestCentosSource
   sudo tests/deploy_aio.sh centos source

[testenv:deploy-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.DeployTestUbuntuSource
   sudo tests/deploy_aio.sh ubuntu source

[testenv:deploy-multinode-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestUbuntuSource

[flake8]
show-source = True
exclude=.git,.tox,doc,ansible/library,docker/kolla-ansible
